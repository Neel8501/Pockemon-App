{"version":3,"sources":["PockemonList.js","Pagination.js","App.js","index.js"],"names":["PockemonList","pockemons","map","p","name","Pagination","gotoNextPage","gotoPrevPage","onClick","App","useState","pockemon","setPockemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","results","next","previous","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAEe,SAASA,EAAT,GAAoC,IAAbC,EAAY,EAAZA,UAClC,OACI,8BACKA,EAAUC,KAAI,SAAAC,GAAC,OACZ,8BAAmBA,EAAEC,MAAXD,EAAEC,WCJb,SAASC,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,aAC9C,OACI,gCACKA,GAAgB,wBAAQC,QAASD,EAAjB,sBAChBD,GAAgB,wBAAQE,QAASF,EAAjB,qB,oBC2CdG,MA5Cf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4CF,mBAAS,qCAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAsCJ,qBAAtC,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCN,qBAAtC,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA8BR,oBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KA6BA,OA3BAC,qBAAU,WAER,IAAIC,EAYJ,OAbAF,GAAW,GAEXG,IAAMC,IAAIX,EAAgB,CAE1BY,YAAa,IAAIF,IAAMG,aAAY,SAAAC,GAAC,OAAGL,EAASK,OAC7CC,MAAK,SAAAC,GACNT,GAAW,GACXR,EAAYiB,EAAIC,KAAKC,SACrBf,EAAea,EAAIC,KAAKE,MACxBd,EAAeW,EAAIC,KAAKG,aAInB,kBAAMX,OACZ,CAACT,IAYAM,EAAgB,aAGlB,qCACE,cAACnB,EAAD,CAAcC,UAAWU,IACzB,cAACN,EAAD,CAAYC,aAAcS,EAf9B,WACEmB,QAAQC,IAAI,oBACZrB,EAAkBC,IAasC,KAAMR,aAAcU,EAV9E,WACEiB,QAAQC,IAAI,oBACZrB,EAAkBG,IAQsF,WCxC5GmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ea3b3990.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function PockemonList({pockemons}) {\r\n    return (\r\n        <div>\r\n            {pockemons.map(p => (\r\n                <div key={p.name}>{p.name}</div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Pagination({gotoNextPage, gotoPrevPage}) {\r\n    return (\r\n        <div>\r\n            {gotoPrevPage && <button onClick={gotoPrevPage}>Previous</button>}\r\n            {gotoNextPage && <button onClick={gotoNextPage}>Next</button>}\r\n        </div>\r\n    )\r\n}\r\n","import PockemonList from './PockemonList'\nimport Pagination from './Pagination'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction App() {\n  const [pockemon, setPockemon] = useState([])\n  const [currentPageUrl, setCurrentPageUrl] = useState(\"https://pokeapi.co/api/v2/pokemon\")\n  const [nextPageUrl, setNextPageUrl] = useState()\n  const [prevPageUrl, setPrevPageUrl] = useState()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(true)\n    let cancel\n    axios.get(currentPageUrl, {\n    // cancelToken is canceling the old request when new request is called to not mismatch data\n    cancelToken: new axios.CancelToken(c=> cancel = c)      \n    }).then(res => {\n      setLoading(false)\n      setPockemon(res.data.results)\n      setNextPageUrl(res.data.next)\n      setPrevPageUrl(res.data.previous)\n    })\n\n    // exected everytime when this useeffect executed\n    return () => cancel()\n  }, [currentPageUrl])\n\n  function gotoNextPage() {\n    console.log(\"called next page\");\n    setCurrentPageUrl(nextPageUrl)\n  }\n\n  function gotoPrevPage() {\n    console.log(\"called prev page\");\n    setCurrentPageUrl(prevPageUrl)\n  }\n\n  if (loading) return \"Loading...\"\n\n  return (\n    <>\n      <PockemonList pockemons={pockemon} />\n      <Pagination gotoNextPage={nextPageUrl? gotoNextPage : null} gotoPrevPage={prevPageUrl? gotoPrevPage : null} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}